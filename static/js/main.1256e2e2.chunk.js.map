{"version":3,"sources":["GlobalStyle.js","common/Main/styled.js","common/Main/index.js","features/countries/CountriesPage/Filters/styled.js","features/filterQueryParamName.js","features/countries/CountriesPage/Filters/index.js","features/countries/queryParameter.js","features/countries/CountriesPage/Countries/styled.js","routes.js","common/Loading/index.js","features/countries/useSelectCountries.js","features/countries/CountriesPage/Countries/index.js","features/countries/CountriesPage/index.js","features/countries/CountryPage/Button/styled.js","features/countries/CountryPage/Button/index.js","features/countries/CountryPage/Country/styled.js","features/countries/CountryPage/Country/index.js","features/countries/CountryPage/index.js","common/Header/styled.js","common/Header/index.js","theme.js","App.js","features/countries/useCountriesData.js","useTheme.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","fontFamily","primary","fontSize","homepageItems","colors","background","text","StyledMain","styled","main","breakpoints","desktopL","Main","children","className","Wrapper","section","Input","input","elements","search","css","mobile","filterQueryParamName","Filters","setRegion","region","queryParameter","replaceQueryParameter","location","useLocation","history","useHistory","key","value","searchParams","URLSearchParams","undefined","delete","set","push","pathname","toString","useReplaceQueryParameter","placeholder","name","type","onChange","target","trim","as","isLoading","tablet","Item","div","StyledLink","Link","FlagContainer","Flag","img","CountryName","h2","desktopCountryName","fontWeights","extraBold","CountryInfo","p","first","last","PropertyName","span","semiBold","toCountry","Loading","color","height","width","useSelectCountries","countriesData","countries","state","filter","country","countryNameUppercased","toUpperCase","queryTrimmedUppercased","includes","selectCountriesByQuery","Countries","selectCountries","map","to","src","flag","alt","population","t","capital","CountriesPage","useState","get","useQueryParameter","StyledButton","button","Button","onClick","goBack","CoutryDataContainer","desktop","detailPageCountryName","BorderCountriesContainer","borders","Country","selectedCountry","selectedCountryLaguages","selectedCountryBordersNames","nativeName","subregion","topLevelDomain","join","countryName","CountryPage","useParams","find","languages","language","countryShotName","alpha3Code","StyledHeader","header","HeaderTitle","h1","title","Header","themeName","toggleThemeName","size","lightTheme","detailPage","light","darkTheme","App","setCountriesData","mounted","useRef","useEffect","current","setTimeout","a","countriesInfo","response","useCountriesData","localeStorageState","localStorage","getItem","JSON","parse","getInitialState","setThemeName","setItem","stringify","useTheme","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1256e2e2.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  font-family: ${({ theme }) => theme.fontFamily.primary};\r\n  font-size: ${({ theme }) => theme.fontSize.homepageItems}px;\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledMain = styled.main`\r\n    max-width: ${({ theme }) => theme.breakpoints.desktopL}px;\r\n    margin: 0px auto;\r\n`;","import React from \"react\";\r\nimport { StyledMain } from \"./styled\";\r\n\r\nexport const Main = ({ children }) => (\r\n    <StyledMain className=\"main\">\r\n        {children}\r\n    </StyledMain>\r\n)","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    margin: 30px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 15px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    border: none;\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n    border-radius: 5px;\r\n\r\n    ${({ search }) => search && css`\r\n        flex: 0 1 200px;\r\n        margin-right: 20px;\r\n    `}\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.mobile}px){\r\n        flex: 1 0 100%;\r\n       \r\n        ${({ search }) => search && css`\r\n        margin-bottom: 30px;\r\n    `}\r\n    }\r\n`;","export const filterQueryParamName = \"filter\";","import React from \"react\";\r\nimport { Wrapper, Input } from \"./styled\";\r\nimport { filterQueryParamName } from \"../../../filterQueryParamName\";\r\nimport { useReplaceQueryParameter } from \"../../queryParameter\";\r\n\r\nexport const Filters = ({ setRegion, region, queryParameter }) => {\r\n    const replaceQueryParameter = useReplaceQueryParameter();\r\n\r\n    const onInputChange = ({ target }) => {\r\n\r\n        replaceQueryParameter({\r\n            key: filterQueryParamName,\r\n            value: target.value.trim() !== \"\" ? target.value : undefined,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Input\r\n                search\r\n                placeholder='Search for a country...'\r\n                name=\"country\"\r\n                type=\"text\"\r\n                value={queryParameter || \"\"}\r\n                onChange={onInputChange}\r\n            />\r\n            <Input\r\n                as=\"select\"\r\n                name=\"region\"\r\n                value={region}\r\n                onChange={({ target }) => setRegion(target.value)}\r\n            >\r\n                <option value=\"\">{region ? \"All\" : \"Filter by region\"}</option>\r\n                <option value=\"africa\">Africa</option>\r\n                <option value=\"americas\">Americas</option>\r\n                <option value=\"asia\">Asia</option>\r\n                <option value=\"europe\">Europe</option>\r\n                <option value=\"oceania\">Oceania</option>\r\n                <option value=\"polar\">Polar</option>\r\n            </Input>\r\n        </Wrapper>\r\n    )\r\n};","import { useLocation, useHistory } from \"react-router\"\r\n\r\nexport const useQueryParameter = (key) => {\r\n    const location = useLocation();\r\n    const searchParams = new URLSearchParams(location.search);\r\n\r\n    return searchParams.get(key);\r\n}\r\n\r\nexport const useReplaceQueryParameter = () => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n\r\n    return ({ key, value }) => {\r\n        const searchParams = new URLSearchParams(location.search);\r\n\r\n        if (value === undefined) {\r\n            searchParams.delete(key);\r\n        } else {\r\n            searchParams.set(key, value)\r\n        }\r\n\r\n        history.push(`${location.pathname}?${searchParams.toString()}`)\r\n    }\r\n}","import styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 30px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    justify-content: space-evenly;\r\n    gap: 75px;\r\n\r\n    ${({ isLoading }) => isLoading && css`\r\n        display: block;\r\n        max-width: 100px;\r\n        margin: 30px auto;\r\n        padding-top: 10%;\r\n\r\n        @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px) {\r\n            max-width: 75px; \r\n            padding-top: 15%;\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const Item = styled.div`\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n    color: ${({ theme }) => theme.colors.text};\r\n    text-decoration: none;\r\n`;\r\n\r\nexport const FlagContainer = styled.div`\r\n    position: relative;\r\n    height: 0;\r\n    width: 100%;\r\n    padding-bottom: 56.25%;\r\n`;\r\n\r\nexport const Flag = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    object-fit: cover;\r\n    border-top-left-radius: 5px;\r\n    border-top-right-radius: 5px;\r\n`;\r\n\r\nexport const CountryName = styled.h2`\r\n    margin: 15px 0px 15px 15px;\r\n    font-size: ${({ theme }) => theme.fontSize.desktopCountryName}px;\r\n    font-weight: ${({ theme }) => theme.fontWeights.extraBold}\r\n`;\r\n\r\nexport const CountryInfo = styled.p`\r\n    margin: 5px 0px 5px 15px;\r\n\r\n    ${({ first }) => first && css`\r\n        margin-top: 0px\r\n    `}\r\n\r\n    ${({ last }) => last && css`\r\n        margin-bottom: 15px;\r\n    `}\r\n`;\r\n\r\nexport const PropertyName = styled.span`\r\n    font-weight: ${({ theme }) => theme.fontWeights.semiBold};\r\n`;","export const toCountries = () => \"/countries\";\r\nexport const toCountry = (name = \":name\") => `/countries/${name}`;","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nexport const Loading = () => (\r\n    <ReactLoading type=\"spinningBubbles\" color=\"black\" height=\"100%\" width=\"100%\" />\r\n)\r\n\r\n","\r\nexport const useSelectCountries = (countriesData, region, queryParameter) => {\r\n\r\n    const selectCountriesByRegion = () => {\r\n        if (countriesData.state === \"success\" && region) {\r\n            return countriesData.countries.filter(country => country.region.toUpperCase() === region.toUpperCase());\r\n        }\r\n\r\n        return countriesData.countries;\r\n    };\r\n\r\n    const selectCountriesByQuery = (countries) => {\r\n        if (countriesData.state === \"success\" && queryParameter && queryParameter.trim() !== \"\") {\r\n            return countries.filter(country => {\r\n                const countryNameUppercased = country.name.toUpperCase();\r\n                const queryTrimmedUppercased = queryParameter.trim().toUpperCase();\r\n\r\n                return countryNameUppercased.includes(queryTrimmedUppercased);\r\n            });\r\n        }\r\n        return countries;\r\n    };\r\n\r\n    const selectCountries = () => {\r\n        const countries = selectCountriesByRegion();\r\n\r\n        return selectCountriesByQuery(countries);\r\n    };\r\n\r\n    return selectCountries;\r\n}","import React from \"react\";\r\nimport {\r\n    Wrapper,\r\n    Item,\r\n    Flag,\r\n    CountryName,\r\n    CountryInfo,\r\n    PropertyName,\r\n    StyledLink,\r\n    FlagContainer,\r\n} from \"./styled\";\r\nimport { toCountry } from \"../../../../routes\";\r\nimport { Loading } from \"../../../../common/Loading\";\r\nimport { useSelectCountries } from \"../../useSelectCountries\";\r\n\r\n\r\nexport const Countries = ({ countriesData, region, queryParameter }) => {\r\n    const selectCountries = useSelectCountries(countriesData, region, queryParameter);\r\n\r\n    return (\r\n        <Wrapper isLoading={countriesData.state === \"loading\"}>\r\n            {countriesData.state === \"loading\"\r\n                ? (\r\n                    <Loading />\r\n                )\r\n                : countriesData.state === \"error\"\r\n                    ? (\r\n                        <p>Wystąpił błąd podczas pobierania danych</p>\r\n                    )\r\n                    : (\r\n                        countriesData.state === \"success\" && selectCountries().map((country) => (\r\n\r\n                            <Item key={country.name}>\r\n                                <StyledLink to={toCountry(country.name)}>\r\n                                    <FlagContainer>\r\n                                        <Flag src={country.flag} alt={country.name}></Flag>\r\n                                    </FlagContainer>\r\n                                    <CountryName>{country.name}</CountryName>\r\n                                    <CountryInfo first><PropertyName >Population: </PropertyName>{country.population}</CountryInfo>\r\n                                    <CountryInfo><PropertyName>Region: </PropertyName>{country.region}</CountryInfo>\r\n                                    <CountryInfo last><PropertyName t>Capital: </PropertyName>{country.capital}</CountryInfo>\r\n                                </StyledLink>\r\n                            </Item>\r\n\r\n                        ))\r\n                    )\r\n            }\r\n        </Wrapper >\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport { Main } from \"../../../common/Main\";\r\nimport { Filters } from \"./Filters\";\r\nimport { Countries } from \"./Countries\";\r\nimport { filterQueryParamName } from \"../../filterQueryParamName\";\r\nimport { useQueryParameter } from \"../queryParameter\";\r\n\r\nexport function CountriesPage({ countriesData }) {\r\n  const [region, setRegion] = useState(\"\");\r\n  const queryParameter = useQueryParameter(filterQueryParamName);\r\n \r\n  return (\r\n    <Main>\r\n      <Filters setRegion={setRegion} region={region} queryParameter={queryParameter} />\r\n      <Countries countriesData={countriesData} region={region} queryParameter={queryParameter} />\r\n    </Main>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 30px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    width: 120px;\r\n    padding: 10px;\r\n    margin-right: 10px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    border: none;\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n    border-radius: 5px;\r\n\r\n`;","import React from \"react\";\r\nimport { Wrapper, StyledButton } from \"./styled\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { toCountries } from \"../../../../routes\";\r\n\r\nexport const Button = () => {\r\n    const history = useHistory();\r\n    const onClick = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Link to={toCountries()}><StyledButton>Home</StyledButton></Link>\r\n            <StyledButton onClick={onClick}>Back</StyledButton>\r\n        </Wrapper>\r\n    )\r\n}","import { Link } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 30px;\r\n    display: grid;\r\n    gap: 50px;\r\n    grid-template-columns: repeat(2, 1fr);\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px){\r\n        grid-template-columns: 1fr;\r\n        gap: 15px;\r\n    }\r\n`;\r\n\r\nexport const FlagContainer = styled.div`\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px){\r\n        justify-self: center;\r\n    }\r\n`;\r\n\r\nexport const Flag = styled.img`\r\n    width: 100%;\r\n    max-width: 500px;\r\n    object-fit: cover;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px){\r\n        max-width:400px;\r\n    }\r\n`;\r\n\r\nexport const CoutryDataContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    \r\n    @media(max-width: ${({ theme }) => theme.breakpoints.desktop}px){\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px){\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.mobile}px){\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const CountryName = styled.h2`\r\n    margin: 15px 0px;\r\n    font-size: ${({ theme }) => theme.fontSize.detailPageCountryName}px;\r\n    font-weight: ${({ theme }) => theme.fontWeights.extraBold}\r\n`;\r\n\r\nexport const BorderCountriesContainer = styled.p`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const PropertyName = styled.span`\r\n    font-weight: ${({ theme }) => theme.fontWeights.semiBold};\r\n\r\n    ${({ borders }) => borders && css`\r\n    align-self: center;\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n    `}\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n    padding: 5px;\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n    color: ${({ theme }) => theme.colors.text};\r\n    text-decoration: none;\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    border-radius: 5px;\r\n`;","import React from \"react\";\r\nimport { toCountry } from \"../../../../routes\";\r\nimport {\r\n    Wrapper,\r\n    FlagContainer,\r\n    Flag,\r\n    CoutryDataContainer,\r\n    CountryName,\r\n    PropertyName,\r\n    StyledLink,\r\n    BorderCountriesContainer,\r\n} from \"./styled\";\r\n\r\nexport const Country = ({ selectedCountry, selectedCountryLaguages, selectedCountryBordersNames }) => (\r\n    <Wrapper>\r\n        <FlagContainer>\r\n            <Flag src={selectedCountry.flag} alt={`${selectedCountry.name} Flag`}></Flag>\r\n        </FlagContainer>\r\n        <div>\r\n            <CountryName>{selectedCountry.name}</CountryName>\r\n            <CoutryDataContainer>\r\n                <p><PropertyName>Native Name: </PropertyName>{selectedCountry.nativeName}</p>\r\n                <p><PropertyName>Population: </PropertyName>{selectedCountry.population}</p>\r\n                <p><PropertyName>Region: </PropertyName>{selectedCountry.region}</p>\r\n                <p><PropertyName>Sub Region: </PropertyName>{selectedCountry.subregion}</p>\r\n                <p><PropertyName>Capital: </PropertyName>{selectedCountry.capital}</p>\r\n                <p><PropertyName>Native Top Level Domain: </PropertyName>{selectedCountry.topLevelDomain}</p>\r\n                <p><PropertyName>Currencies: </PropertyName>{selectedCountry.nativeName}</p>\r\n                <p><PropertyName>Languages: </PropertyName>{selectedCountryLaguages.join(\", \")}</p>\r\n            </CoutryDataContainer>\r\n            <div>\r\n                <BorderCountriesContainer>\r\n                    <PropertyName borders>\r\n                        Border Countires:\r\n                    </PropertyName>\r\n                    {selectedCountryBordersNames.map(countryName => (\r\n                        <StyledLink key={countryName} to={toCountry(countryName)}>{countryName}</StyledLink>\r\n                    ))}\r\n\r\n                </BorderCountriesContainer>\r\n            </div>\r\n        </div>\r\n    </Wrapper>\r\n)","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Button } from \"./Button\";\r\nimport { Country } from \"./Country\";\r\nimport { Main } from \"../../../common/Main\";\r\n\r\n\r\nexport const CountryPage = ({ countriesData }) => {\r\n    const { name } = useParams();\r\n    let selectedCountry;\r\n    let selectedCountryLaguages;\r\n    let selectedCountryBordersNames;\r\n\r\n    if (countriesData.state === \"success\") {\r\n        selectedCountry = countriesData.countries.find(country => country.name === name);\r\n        selectedCountryLaguages = selectedCountry.languages.map(language => language.name);\r\n        selectedCountryBordersNames = selectedCountry.borders\r\n            .map(countryShotName => countriesData.countries\r\n                .find(country => country.alpha3Code === countryShotName).name)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {countriesData.state === \"success\" && (\r\n                <Main>\r\n                    <Button />\r\n                    <Country\r\n                        selectedCountry={selectedCountry}\r\n                        selectedCountryLaguages={selectedCountryLaguages}\r\n                        selectedCountryBordersNames={selectedCountryBordersNames}\r\n                    />\r\n                </Main>\r\n            )}\r\n        </>\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 15px 30px;\r\n    max-width: ${({ theme }) => theme.breakpoints.desktopL}px;\r\n    margin: 0px auto;\r\n`;\r\n\r\nexport const HeaderTitle = styled.h1`\r\n    font-size: ${({ theme }) => theme.fontSize.title}px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, auto);\r\n    gap: 7px;\r\n    align-items: center;\r\n    margin-left: 8px;\r\n    padding: 7px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    border: none;\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n    margin-bottom: 30px;\r\n`;","import React from \"react\";\r\nimport { StyledHeader, HeaderTitle, StyledButton, Wrapper } from \"./styled\";\r\n\r\nexport const Header = ({ title, themeName, toggleThemeName }) => {\r\n\r\n    return (\r\n        <Wrapper>\r\n            <StyledHeader>\r\n                <HeaderTitle>{title}</HeaderTitle>\r\n                <StyledButton onClick={() => toggleThemeName()}>\r\n                    {themeName === \"Dark\"\r\n                        ? <ion-icon size=\"small\" name=\"moon-outline\"></ion-icon>\r\n                        : <ion-icon size=\"small\" name=\"sunny-outline\"></ion-icon>}\r\n                    {\" \"}\r\n                    <span>{themeName}&nbsp;Theme</span>\r\n                </StyledButton>\r\n            </StyledHeader>\r\n        </Wrapper>\r\n    )\r\n};","export const lightTheme = {\r\n    colors: {\r\n        background: \"hsl(0, 0%, 98%)\",\r\n        input: \"hsl(0, 0%, 80%)\",\r\n        text: \"hsl(200, 15%, 8%)\",\r\n        elements: \"hsl(0, 0%, 100%)\",\r\n    },\r\n    breakpoints: {\r\n        mobile: 475,\r\n        tablet: 767,\r\n        desktop: 1023,\r\n        desktopL: 1440,\r\n    },\r\n    fontSize: {\r\n        title: 24,\r\n        desktopCountryName: 16,\r\n        detailPageCountryName: 18,\r\n        homepageItems: 14,\r\n        detailPage: 16,\r\n    },\r\n    fontFamily: {\r\n        primary: \"'Nunito Sans', sans-serif\",\r\n    },\r\n    fontWeights: {\r\n        light: 300,\r\n        semiBold: 600,\r\n        extraBold: 800,\r\n    }\r\n}\r\n\r\nexport const darkTheme = {\r\n    ...lightTheme,\r\n    colors: {\r\n        background: \"hsl(207, 26%, 17%)\",\r\n        input: \"hsl(207, 26%, 17%)\",\r\n        text: \"hsl(0, 0%, 100%)\",\r\n        elements: \"hsl(209, 23%, 22%)\",\r\n    }\r\n}","import React from \"react\";\r\nimport { Switch, Route, Redirect, HashRouter } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport { CountriesPage } from \"./features/countries/CountriesPage\";\r\nimport { CountryPage } from \"./features//countries/CountryPage\";\r\nimport { useCountriesData } from \"./features/countries/useCountriesData\";\r\nimport { Header } from \"./common/Header\";\r\nimport { useTheme } from \"./useTheme\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { toCountries, toCountry } from \"./routes\";\r\n\r\n// obsuła loading i erroru DONE\r\n// ujednolicenie componentów jak w filmuku react hook DONE\r\n// media queries dla strony z wszystkimi krajami DONE\r\n// flex dla inputów DONE\r\n// border radius DONE\r\n\r\nconst App = () => {\r\n    const countriesData = useCountriesData();\r\n    const { themeName, toggleThemeName } = useTheme();\r\n\r\n    return (\r\n        <ThemeProvider theme={themeName === \"Light\" ? darkTheme : lightTheme}>\r\n            <GlobalStyle />\r\n            <HashRouter>\r\n                <Header title=\"Where is the world?\" themeName={themeName} toggleThemeName={toggleThemeName} />\r\n                <Switch>\r\n                    <Route path={toCountry()}>\r\n                        <CountryPage countriesData={countriesData} />\r\n                    </Route>\r\n                    <Route path={toCountries()}>\r\n                        <CountriesPage countriesData={countriesData} />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Redirect to={toCountries()} />\r\n                    </Route>\r\n                </Switch>\r\n            </HashRouter>\r\n        </ThemeProvider>\r\n    )\r\n};\r\n\r\nexport default App;","import { useState, useEffect, useRef } from \"react\";\r\nimport countriesInfo from \"../../services/countries.json\";\r\n\r\nexport const useCountriesData = () => {\r\n    const [countriesData, setCountriesData] = useState(({\r\n        state: \"loading\"\r\n    }));\r\n    const mounted = useRef(true);\r\n\r\n    useEffect(() => {\r\n        mounted.current = true;\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await countriesInfo;\r\n                if (mounted.current) {\r\n                    setCountriesData({\r\n                        state: \"success\",\r\n                        countries: response\r\n                    })\r\n                }\r\n            } catch {\r\n                if (mounted.current) {\r\n                    setCountriesData({\r\n                        state: \"error\",\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        setTimeout(fetchData, 1000)\r\n\r\n        return () => mounted.current = false;\r\n    }, [])\r\n\r\n    return countriesData;\r\n};","import { useEffect, useState } from \"react\";\r\n\r\n\r\nexport const useTheme = () => {\r\n    const getInitialState = () => {\r\n        const localeStorageState = localStorage.getItem(\"theme\");\r\n\r\n        if (!localeStorageState) {\r\n            return \"Dark\"\r\n        }\r\n        return JSON.parse(localeStorageState);\r\n    }\r\n\r\n    const [themeName, setThemeName] = useState(getInitialState());\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"theme\", JSON.stringify(themeName));\r\n    }, [themeName]);\r\n\r\n    const toggleThemeName = () => {\r\n        return themeName === \"Light\" ? setThemeName(\"Dark\") : setThemeName(\"Light\");\r\n    };\r\n\r\n    return { themeName, toggleThemeName };\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}