{"version":3,"sources":["GlobalStyle.js","common/Main/styled.js","common/Main/index.js","features/countries/CountriesPage/Filters/styled.js","features/filterQueryParamName.js","features/countries/CountriesPage/Filters/index.js","features/countries/CountriesPage/Countries/styled.js","routes.js","features/countries/CountriesPage/Countries/index.js","features/countries/CountriesPage/index.js","features/countries/CountryPage/Button/styled.js","features/countries/CountryPage/Button/index.js","features/countries/CountryPage/Country/styled.js","features/countries/CountryPage/Country/index.js","features/countries/CountryPage/index.js","common/Header/styled.js","common/Header/index.js","theme.js","App.js","features/useCountriesData.js","useTheme.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","fontFamily","primary","fontSize","homepageItems","colors","background","text","StyledMain","styled","main","breakpoints","desktopL","Main","children","className","Wrapper","section","Input","input","elements","search","css","filterQueryParamName","Filters","setRegion","region","location","useLocation","history","useHistory","searchParams","URLSearchParams","placeholder","name","type","value","get","onChange","target","trim","delete","set","push","pathname","toString","as","hidden","Item","div","Flag","img","CountryName","h2","desktopCountryName","fontWeights","extraBold","CountryInfo","p","first","last","PropertyName","span","semiBold","StyledLink","Link","toCountry","Countries","countriesData","selectCountries","state","map","country","to","src","flag","alt","population","t","capital","CountriesPage","useState","query","countries","filter","countryNameUppercased","toUpperCase","queryTrimmedUppercased","includes","selectCountriesByQuery","StyledButton","button","Button","tablet","FlagContainer","CoutryDataContainer","desktop","mobile","detailPageCountryName","BorderCountriesContainer","list","Country","selectedCountry","selectedCountryLaguages","selectedCountryBordersNames","nativeName","subregion","topLevelDomain","join","countryName","CountryPage","useParams","find","languages","language","borders","countryShotName","alpha3Code","StyledHeader","header","HeaderTitle","h1","title","Header","themeName","toggleThemeName","onClick","size","lightTheme","detailPage","light","darkTheme","App","setCountriesData","mounted","useRef","useEffect","current","setTimeout","a","countriesInfo","response","useCountriesData","setThemeName","useTheme","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f70a3fba.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  font-family: ${({ theme }) => theme.fontFamily.primary};\r\n  font-size: ${({ theme }) => theme.fontSize.homepageItems}px;\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledMain = styled.main`\r\n    max-width: ${({ theme }) => theme.breakpoints.desktopL}px;\r\n    margin: 0px auto;\r\n`;","import React from \"react\";\r\nimport { StyledMain } from \"./styled\";\r\n\r\nexport const Main = ({ children }) => (\r\n    <StyledMain className=\"main\">\r\n        {children}\r\n    </StyledMain>\r\n)","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 30px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 15px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    border: none;\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n\r\n    ${({ search }) => search && css`\r\n        flex: 0 1 300px\r\n    `}\r\n`;","export const filterQueryParamName = \"filter\";","import React from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { Wrapper, Input } from \"./styled\";\r\nimport { filterQueryParamName } from \"../../../filterQueryParamName\";\r\n\r\nexport const Filters = ({ setRegion, region }) => {\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const searchParams = new URLSearchParams(location.search);\r\n\r\n    const onInputChange = ({ target }) => {\r\n\r\n        if (target.value.trim() === \"\") {\r\n            searchParams.delete(filterQueryParamName);\r\n        } else {\r\n            searchParams.set(filterQueryParamName, target.value)\r\n        }\r\n\r\n        history.push(`${location.pathname}?${searchParams.toString()}`)\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Input\r\n                search\r\n                placeholder='Search for a country...'\r\n                name=\"country\"\r\n                type=\"text\"\r\n                value={searchParams.get(filterQueryParamName) || \"\"}\r\n                onChange={onInputChange}\r\n            />\r\n            <Input\r\n                as=\"select\"\r\n                name=\"region\"\r\n                value={region}\r\n                onChange={({ target }) => setRegion(target.value)}\r\n            >\r\n                <option value=\"\" hidden>Filter by Region</option>\r\n                <option value=\"africa\">Africa</option>\r\n                <option value=\"americas\">Americas</option>\r\n                <option value=\"asia\">Asia</option>\r\n                <option value=\"europe\">Europe</option>\r\n                <option value=\"oceania\">Oceania</option>\r\n                <option value=\"polar\">Polar</option>\r\n            </Input>\r\n        </Wrapper>\r\n    )\r\n};","import styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 30px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 200px);\r\n    justify-content: space-evenly;\r\n    gap: 50px;\r\n`;\r\n\r\nexport const Item = styled.div`\r\n    display:flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n`;\r\n\r\nexport const Flag = styled.img`\r\n    height: 120px;\r\n    width: 200px;\r\n    object-fit: cover;\r\n`;\r\n\r\nexport const CountryName = styled.h2`\r\n    margin: 15px 0px 15px 15px;\r\n    font-size: ${({ theme }) => theme.fontSize.desktopCountryName}px;\r\n    font-weight: ${({ theme }) => theme.fontWeights.extraBold}\r\n`;\r\n\r\nexport const CountryInfo = styled.p`\r\n    flex: 1 0 100%;\r\n    margin: 5px 0px 5px 15px;\r\n\r\n    ${({ first }) => first && css`\r\n        margin-top: 0px\r\n    `}\r\n\r\n    ${({ last }) => last && css`\r\n        margin-bottom: 15px;\r\n    `}\r\n`;\r\n\r\nexport const PropertyName = styled.span`\r\n    font-weight: ${({ theme }) => theme.fontWeights.semiBold};\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n    color: ${({ theme }) => theme.colors.text};\r\n    text-decoration: none;\r\n`;","export const toCountries = () => \"/countries\";\r\nexport const toCountry = (name = \":name\") => `/countries/${name}`;","import React from \"react\";\r\nimport {\r\n    Wrapper,\r\n    Item,\r\n    Flag,\r\n    CountryName,\r\n    CountryInfo,\r\n    PropertyName,\r\n    StyledLink\r\n} from \"./styled\";\r\nimport { toCountry } from \"../../../../routes\";\r\n\r\n\r\nexport const Countries = ({ countriesData, selectCountries }) => {\r\n\r\n    return (\r\n        <Wrapper>\r\n            {countriesData.state === \"loading\"\r\n                ? (\r\n                    <p>Trwa ładowanie...</p>\r\n                )\r\n                : countriesData.state === \"error\"\r\n                    ? (\r\n                        <p>Wystąpił błąd podczas pobierania danych</p>\r\n                    )\r\n                    : (\r\n                        countriesData.state === \"success\" && selectCountries().map((country) => (\r\n\r\n                            <Item key={country.name}>\r\n                                <StyledLink to={toCountry(country.name)}>\r\n                                    <Flag src={country.flag} alt={country.name}></Flag>\r\n                                    <CountryName>{country.name}</CountryName>\r\n                                    <CountryInfo first><PropertyName >Population: </PropertyName>{country.population}</CountryInfo>\r\n                                    <CountryInfo><PropertyName>Region: </PropertyName>{country.region}</CountryInfo>\r\n                                    <CountryInfo last><PropertyName t>Capital: </PropertyName>{country.capital}</CountryInfo>\r\n                                </StyledLink>\r\n                            </Item>\r\n\r\n                        ))\r\n                    )\r\n            }\r\n        </Wrapper >\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Main } from \"../../../common/Main\";\r\nimport { Filters } from \"./Filters\";\r\nimport { Countries } from \"./Countries\";\r\nimport { filterQueryParamName } from \"../../filterQueryParamName\";\r\n\r\nexport function CountriesPage({ countriesData }) {\r\n  const [region, setRegion] = useState(\"\");\r\n  const location = useLocation();\r\n  const query = (new URLSearchParams(location.search)).get(filterQueryParamName);\r\n\r\n  const selectCountriesByRegion = () => {\r\n    if (countriesData.state === \"success\" && region) {\r\n      return countriesData.countries.filter(country => country.region.toUpperCase() === region.toUpperCase());\r\n    }\r\n\r\n    return countriesData.countries;\r\n  };\r\n\r\n  const selectCountriesByQuery = (countries) => {\r\n    if (countriesData.state === \"success\" && query && query.trim() !== \"\") {\r\n      return countries.filter(country => {\r\n        const countryNameUppercased = country.name.toUpperCase();\r\n        const queryTrimmedUppercased = query.trim().toUpperCase();\r\n\r\n        return countryNameUppercased.includes(queryTrimmedUppercased);\r\n      });\r\n    }\r\n    return countries;\r\n  };\r\n\r\n  const selectCountries = () => {\r\n    const countries = selectCountriesByRegion();\r\n\r\n    return selectCountriesByQuery(countries);\r\n  }\r\n\r\n  return (\r\n    <Main>\r\n      <Filters setRegion={setRegion} region={region} />\r\n      <Countries selectCountries={selectCountries} countriesData={countriesData} />\r\n    </Main>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 30px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    width: 120px;\r\n    padding: 10px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    border: none;\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n\r\n`;","import React from \"react\";\r\nimport { Wrapper, StyledButton } from \"./styled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toCountries } from \"../../../../routes\";\r\n\r\nexport const Button = () => (\r\n    <Wrapper>\r\n        <Link to={toCountries()}><StyledButton>Back</StyledButton></Link>\r\n    </Wrapper>\r\n)","import { Link } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 30px;\r\n    display: grid;\r\n    gap: 50px;\r\n    grid-template-columns: repeat(2, 1fr);\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px){\r\n        grid-template-columns: 1fr;\r\n        gap: 15px;\r\n    }\r\n`;\r\n\r\nexport const FlagContainer = styled.div`\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px){\r\n        justify-self: center;\r\n    }\r\n`;\r\n\r\nexport const Flag = styled.img`\r\n    width: 100%;\r\n    max-width: 500px;\r\n    object-fit: cover;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px){\r\n        max-width:400px;\r\n    }\r\n`;\r\n\r\nexport const CoutryDataContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    \r\n    @media(max-width: ${({ theme }) => theme.breakpoints.desktop}px){\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px){\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.mobile}px){\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const CountryName = styled.h2`\r\n    margin: 15px 0px;\r\n    font-size: ${({ theme }) => theme.fontSize.detailPageCountryName}px;\r\n    font-weight: ${({ theme }) => theme.fontWeights.extraBold}\r\n`;\r\n\r\nexport const BorderCountriesContainer = styled.p`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const PropertyName = styled.span`\r\n    font-weight: ${({ theme }) => theme.fontWeights.semiBold};\r\n\r\n    ${({ list }) => list && css`\r\n    align-self: center;\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n    `}\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n    padding: 5px;\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n    color: ${({ theme }) => theme.colors.text};\r\n    text-decoration: none;\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n`;","import React from \"react\";\r\nimport { toCountry } from \"../../../../routes\";\r\nimport {\r\n    Wrapper,\r\n    FlagContainer,\r\n    Flag,\r\n    CoutryDataContainer,\r\n    CountryName,\r\n    PropertyName,\r\n    StyledLink,\r\n    BorderCountriesContainer,\r\n} from \"./styled\";\r\n\r\nexport const Country = ({ selectedCountry, selectedCountryLaguages, selectedCountryBordersNames }) => (\r\n    <Wrapper>\r\n        <FlagContainer>\r\n            <Flag src={selectedCountry.flag} alt={`${selectedCountry.name} Flag`}></Flag>\r\n        </FlagContainer>\r\n        <div>\r\n            <CountryName>{selectedCountry.name}</CountryName>\r\n            <CoutryDataContainer>\r\n                <p><PropertyName>Native Name: </PropertyName>{selectedCountry.nativeName}</p>\r\n                <p><PropertyName>Population: </PropertyName>{selectedCountry.population}</p>\r\n                <p><PropertyName>Region: </PropertyName>{selectedCountry.region}</p>\r\n                <p><PropertyName>Sub Region: </PropertyName>{selectedCountry.subregion}</p>\r\n                <p><PropertyName>Capital: </PropertyName>{selectedCountry.capital}</p>\r\n                <p><PropertyName>Native Top Level Domain: </PropertyName>{selectedCountry.topLevelDomain}</p>\r\n                <p><PropertyName>Currencies: </PropertyName>{selectedCountry.nativeName}</p>\r\n                <p><PropertyName>Languages: </PropertyName>{selectedCountryLaguages.join(\", \")}</p>\r\n            </CoutryDataContainer>\r\n            <div>\r\n                <BorderCountriesContainer>\r\n                    <PropertyName list>\r\n                        Border Countires:\r\n                    </PropertyName>\r\n                    {selectedCountryBordersNames.map(countryName => (\r\n                        <StyledLink to={toCountry(countryName)}>{countryName}</StyledLink>\r\n                    ))}\r\n\r\n                </BorderCountriesContainer>\r\n            </div>\r\n        </div>\r\n    </Wrapper>\r\n)","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Button } from \"./Button\";\r\nimport { Country } from \"./Country\";\r\nimport { Main } from \"../../../common/Main\";\r\n\r\n\r\nexport const CountryPage = ({ countriesData }) => {\r\n    const { name } = useParams();\r\n    let selectedCountry;\r\n    let selectedCountryLaguages;\r\n    let selectedCountryBordersNames;\r\n\r\n    if (countriesData.state === \"success\") {\r\n        selectedCountry = countriesData.countries.find(country => country.name === name);\r\n        selectedCountryLaguages = selectedCountry.languages.map(language => language.name);\r\n        selectedCountryBordersNames = selectedCountry.borders\r\n            .map(countryShotName => countriesData.countries\r\n                .find(country => country.alpha3Code === countryShotName).name)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {countriesData.state === \"success\" && (\r\n                <Main>\r\n                    <Button />\r\n                    <Country\r\n                        selectedCountry={selectedCountry}\r\n                        selectedCountryLaguages={selectedCountryLaguages}\r\n                        selectedCountryBordersNames={selectedCountryBordersNames}\r\n                    />\r\n                </Main>\r\n            )}\r\n        </>\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 15px 30px;\r\n    max-width: ${({ theme }) => theme.breakpoints.desktopL}px;\r\n    margin: 0px auto;\r\n`;\r\n\r\nexport const HeaderTitle = styled.h1`\r\n    font-size: ${({ theme }) => theme.fontSize.title}px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, auto);\r\n    gap: 7px;\r\n    align-items: center;\r\n    margin-left: 10px;\r\n    padding: 7px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    border: none;\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n    margin-bottom: 30px;\r\n`;","import React from \"react\";\r\nimport { StyledHeader, HeaderTitle, StyledButton, Wrapper } from \"./styled\";\r\n\r\nexport const Header = ({ title, themeName, toggleThemeName }) => {\r\n\r\n    return (\r\n        <Wrapper>\r\n            <StyledHeader>\r\n                <HeaderTitle>{title}</HeaderTitle>\r\n                <StyledButton onClick={() => toggleThemeName()}>\r\n                    {themeName === \"Dark\"\r\n                        ? <ion-icon size=\"small\" name=\"sunny-outline\"></ion-icon>\r\n                        : <ion-icon size=\"small\" name=\"moon-outline\"></ion-icon>}\r\n                    {\" \"}\r\n                    <span>{themeName}&nbsp;Theme</span>\r\n                </StyledButton>\r\n            </StyledHeader>\r\n        </Wrapper>\r\n    )\r\n};","export const lightTheme = {\r\n    colors: {\r\n        background: \"hsl(0, 0%, 98%)\",\r\n        input: \"hsl(0, 0%, 80%)\",\r\n        text: \"hsl(200, 15%, 8%)\",\r\n        elements: \"hsl(0, 0%, 100%)\",\r\n    },\r\n    breakpoints: {\r\n        mobile: 475,\r\n        tablet: 767,\r\n        desktop: 1023,\r\n        desktopL: 1440,\r\n    },\r\n    fontSize: {\r\n        title: 24,\r\n        desktopCountryName: 16,\r\n        detailPageCountryName: 18,\r\n        homepageItems: 14,\r\n        detailPage: 16,\r\n    },\r\n    fontFamily: {\r\n        primary: \"'Nunito Sans', sans-serif\",\r\n    },\r\n    fontWeights: {\r\n        light: 300,\r\n        semiBold: 600,\r\n        extraBold: 800,\r\n    }\r\n}\r\n\r\nexport const darkTheme = {\r\n    ...lightTheme,\r\n    colors: {\r\n        background: \"hsl(207, 26%, 17%)\",\r\n        input: \"hsl(207, 26%, 17%)\",\r\n        text: \"hsl(0, 0%, 100%)\",\r\n        elements: \"hsl(209, 23%, 22%)\",\r\n    }\r\n}","import React from \"react\";\r\nimport { Switch, Route, Redirect, HashRouter } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport { CountriesPage } from \"./features/countries/CountriesPage\";\r\nimport { CountryPage } from \"./features//countries/CountryPage\";\r\nimport { useCountriesData } from \"./features/useCountriesData\";\r\nimport { Header } from \"./common/Header\";\r\nimport { useTheme } from \"./useTheme\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { toCountries, toCountry } from \"./routes\";\r\n\r\nconst App = () => {\r\n    const countriesData = useCountriesData();\r\n    const { themeName, toggleThemeName } = useTheme();\r\n\r\n    return (\r\n        <ThemeProvider theme={themeName === \"Light\" ? darkTheme : lightTheme}>\r\n            <GlobalStyle />\r\n            <HashRouter>\r\n                <Header title=\"Where is the world?\" themeName={themeName} toggleThemeName={toggleThemeName} />\r\n                <Switch>\r\n                    <Route path={toCountry()}>\r\n                        <CountryPage countriesData={countriesData} />\r\n                    </Route>\r\n                    <Route path={toCountries()}>\r\n                        <CountriesPage countriesData={countriesData} />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Redirect to={toCountries()} />\r\n                    </Route>\r\n                </Switch>\r\n            </HashRouter>\r\n        </ThemeProvider>\r\n    )\r\n};\r\n\r\nexport default App;","import { useState, useEffect, useRef } from \"react\";\r\nimport countriesInfo from \"../services/countries.json\";\r\n\r\nexport const useCountriesData = () => {\r\n    const [countriesData, setCountriesData] = useState(({\r\n        state: \"loading\"\r\n    }));\r\n    const mounted = useRef(true);\r\n\r\n    useEffect(() => {\r\n        mounted.current = true;\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await countriesInfo;\r\n                setCountriesData({\r\n                    state: \"success\",\r\n                    countries: response\r\n                })\r\n            } catch {\r\n                setCountriesData({\r\n                    state: \"error\",\r\n                })\r\n            }\r\n        }\r\n\r\n        setTimeout(fetchData, 1000)\r\n\r\n        return () => mounted.current = false;\r\n    }, [])\r\n\r\n    return countriesData;\r\n};","import { useState } from \"react\";\r\n\r\nexport const useTheme = () => {\r\n    const [themeName, setThemeName] = useState(\"Dark\");\r\n\r\n    const toggleThemeName = () => {\r\n        return themeName === \"Light\" ? setThemeName(\"Dark\") : setThemeName(\"Light\");\r\n    };\r\n\r\n    return { themeName, toggleThemeName };\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}