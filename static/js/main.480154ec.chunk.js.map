{"version":3,"sources":["GlobalStyle.js","common/Main/styled.js","common/Main/index.js","features/countries/CountriesPage/Filters/styled.js","features/countries/CountriesPage/Filters/index.js","features/countries/CountriesPage/Countries/styled.js","routes.js","features/countries/CountriesPage/Countries/index.js","features/countries/CountriesPage/index.js","features/countries/CountryPage/Button/styled.js","features/countries/CountryPage/Button/index.js","features/countries/CountryPage/Country/styled.js","features/countries/CountryPage/Country/index.js","features/countries/CountryPage/index.js","common/Header/styled.js","common/Header/index.js","theme.js","App.js","features/useCountriesData.js","useTheme.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","fontFamily","primary","fontSize","homepageItems","colors","background","text","StyledMain","styled","main","breakpoints","desktopL","Main","children","className","Wrapper","section","Input","input","elements","search","css","Filters","placeholder","name","type","as","value","selected","hidden","Item","div","Flag","img","CountryName","h2","desktopCountryName","fontWeights","extraBold","CountryInfo","p","first","last","PropertyName","span","semiBold","StyledLink","Link","toCountry","Countries","countriesData","state","countries","map","country","to","src","flag","alt","population","region","t","capital","CountriesPage","StyledButton","button","Button","tablet","FlagContainer","CoutryDataContainer","desktop","mobile","detailPageCountryName","BorderCountriesContainer","list","Country","selectedCountry","selectedCountryLaguages","selectedCountryBordersNames","nativeName","subregion","topLevelDomain","join","countryName","CountryPage","useParams","find","languages","language","borders","countryShotName","alpha3Code","StyledHeader","header","HeaderTitle","h1","title","Header","themeName","toggleThemeName","console","log","onClick","size","lightTheme","detailPage","light","darkTheme","App","useState","setCountriesData","mounted","useRef","useEffect","current","setTimeout","a","countriesInfo","response","useCountriesData","setThemeName","useTheme","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.480154ec.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  font-family: ${({ theme }) => theme.fontFamily.primary};\r\n  font-size: ${({ theme }) => theme.fontSize.homepageItems}px;\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledMain = styled.main`\r\n    max-width: ${({ theme }) => theme.breakpoints.desktopL}px;\r\n    margin: 0px auto;\r\n`;","import React from \"react\";\r\nimport { StyledMain } from \"./styled\";\r\n\r\nexport const Main = ({ children }) => (\r\n    <StyledMain className=\"main\">\r\n        {children}\r\n    </StyledMain>\r\n)","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 30px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 15px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    border: none;\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n\r\n    ${({ search }) => search && css`\r\n        flex: 0 1 300px\r\n    `}\r\n`;","import React from \"react\";\r\nimport { Wrapper, Input } from \"./styled\";\r\n\r\nexport const Filters = () => (\r\n    <Wrapper>\r\n        <Input\r\n            search\r\n            placeholder='Seach for a country...'\r\n            name=\"country\"\r\n            type=\"text\"\r\n        />\r\n        <Input\r\n            as=\"select\"\r\n            name=\"region\"\r\n        >\r\n            <option value=\"\" selected hidden>Filter by Region</option>\r\n            <option value=\"africa\">Africa</option>\r\n            <option value=\"america\">Americas</option>\r\n            <option value=\"asia\">Asia</option>\r\n            <option value=\"europe\">Europe</option>\r\n            <option value=\"oceania\">Oceania</option>\r\n            <option value=\"polar\">Polar</option>\r\n        </Input>\r\n    </Wrapper>\r\n);","import styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 30px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 200px);\r\n    justify-content: space-evenly;\r\n    gap: 50px;\r\n`;\r\n\r\nexport const Item = styled.div`\r\n    display:flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n`;\r\n\r\nexport const Flag = styled.img`\r\n    height: 120px;\r\n    width: 200px;\r\n    object-fit: cover;\r\n`;\r\n\r\nexport const CountryName = styled.h2`\r\n    margin: 15px 0px 15px 15px;\r\n    font-size: ${({ theme }) => theme.fontSize.desktopCountryName}px;\r\n    font-weight: ${({ theme }) => theme.fontWeights.extraBold}\r\n`;\r\n\r\nexport const CountryInfo = styled.p`\r\n    flex: 1 0 100%;\r\n    margin: 5px 0px 5px 15px;\r\n\r\n    ${({ first }) => first && css`\r\n        margin-top: 0px\r\n    `}\r\n\r\n    ${({ last }) => last && css`\r\n        margin-bottom: 15px;\r\n    `}\r\n`;\r\n\r\nexport const PropertyName = styled.span`\r\n    font-weight: ${({ theme }) => theme.fontWeights.semiBold};\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n    color: ${({ theme }) => theme.colors.text};\r\n    text-decoration: none;\r\n`;","export const toCountries = () => \"/countries\";\r\nexport const toCountry = (name = \":name\") => `/countries/${name}`;","import React from \"react\";\r\nimport {\r\n    Wrapper,\r\n    Item,\r\n    Flag,\r\n    CountryName,\r\n    CountryInfo,\r\n    PropertyName,\r\n    StyledLink\r\n} from \"./styled\";\r\nimport { toCountry } from \"../../../../routes\";\r\n\r\nexport const Countries = ({ countriesData }) => {\r\n\r\n    return (\r\n        <Wrapper>\r\n            {countriesData.state === \"loading\"\r\n                ? (\r\n                    <p>Trwa ładowanie...</p>\r\n                )\r\n                : countriesData.state === \"error\"\r\n                    ? (\r\n                        <p>Wystąpił błąd podczas pobierania danych</p>\r\n                    )\r\n                    : (\r\n                        countriesData.countries.map((country) => (\r\n\r\n                            <Item key={country.name}>\r\n                                <StyledLink to={toCountry(country.name)}>\r\n                                    <Flag src={country.flag} alt={country.name}></Flag>\r\n                                    <CountryName>{country.name}</CountryName>\r\n                                    <CountryInfo first><PropertyName >Population: </PropertyName>{country.population}</CountryInfo>\r\n                                    <CountryInfo><PropertyName>Region: </PropertyName>{country.region}</CountryInfo>\r\n                                    <CountryInfo last><PropertyName t>Capital: </PropertyName>{country.capital}</CountryInfo>\r\n                                </StyledLink>\r\n                            </Item>\r\n\r\n                        ))\r\n                    )\r\n            }\r\n        </Wrapper >\r\n    )\r\n}","import React from \"react\";\r\nimport { Main } from \"../../../common/Main\";\r\nimport { Filters } from \"./Filters\";\r\nimport { Countries } from \"./Countries\";\r\n\r\nexport function CountriesPage({ countriesData }) {\r\n\r\n  return (\r\n    <Main>\r\n      <Filters />\r\n      <Countries countriesData={countriesData} />\r\n    </Main>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 30px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    width: 120px;\r\n    padding: 10px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    border: none;\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n\r\n`;","import React from \"react\";\r\nimport { Wrapper, StyledButton } from \"./styled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toCountries } from \"../../../../routes\";\r\n\r\nexport const Button = () => (\r\n    <Wrapper>\r\n        <Link to={toCountries()}><StyledButton>Back</StyledButton></Link>\r\n    </Wrapper>\r\n)","import { Link } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 30px;\r\n    display: grid;\r\n    gap: 50px;\r\n    grid-template-columns: repeat(2, 1fr);\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px){\r\n        grid-template-columns: 1fr;\r\n        gap: 15px;\r\n    }\r\n`;\r\n\r\nexport const FlagContainer = styled.div`\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px){\r\n        justify-self: center;\r\n    }\r\n`;\r\n\r\nexport const Flag = styled.img`\r\n    width: 100%;\r\n    max-width: 500px;\r\n    object-fit: cover;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px){\r\n        max-width:400px;\r\n    }\r\n`;\r\n\r\nexport const CoutryDataContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    \r\n    @media(max-width: ${({ theme }) => theme.breakpoints.desktop}px){\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px){\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.mobile}px){\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const CountryName = styled.h2`\r\n    margin: 15px 0px;\r\n    font-size: ${({ theme }) => theme.fontSize.detailPageCountryName}px;\r\n    font-weight: ${({ theme }) => theme.fontWeights.extraBold}\r\n`;\r\n\r\nexport const BorderCountriesContainer = styled.p`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const PropertyName = styled.span`\r\n    font-weight: ${({ theme }) => theme.fontWeights.semiBold};\r\n\r\n    ${({ list }) => list && css`\r\n    align-self: center;\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n    `}\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n    padding: 5px;\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n    color: ${({ theme }) => theme.colors.text};\r\n    text-decoration: none;\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n`;","import React from \"react\";\r\nimport { toCountry } from \"../../../../routes\";\r\nimport {\r\n    Wrapper,\r\n    FlagContainer,\r\n    Flag,\r\n    CoutryDataContainer,\r\n    CountryName,\r\n    PropertyName,\r\n    StyledLink,\r\n    BorderCountriesContainer,\r\n} from \"./styled\";\r\n\r\nexport const Country = ({ selectedCountry, selectedCountryLaguages, selectedCountryBordersNames }) => (\r\n    <Wrapper>\r\n        <FlagContainer>\r\n            <Flag src={selectedCountry.flag} alt={`${selectedCountry.name} Flag`}></Flag>\r\n        </FlagContainer>\r\n        <div>\r\n            <CountryName>{selectedCountry.name}</CountryName>\r\n            <CoutryDataContainer>\r\n                <p><PropertyName>Native Name: </PropertyName>{selectedCountry.nativeName}</p>\r\n                <p><PropertyName>Population: </PropertyName>{selectedCountry.population}</p>\r\n                <p><PropertyName>Region: </PropertyName>{selectedCountry.region}</p>\r\n                <p><PropertyName>Sub Region: </PropertyName>{selectedCountry.subregion}</p>\r\n                <p><PropertyName>Capital: </PropertyName>{selectedCountry.capital}</p>\r\n                <p><PropertyName>Native Top Level Domain: </PropertyName>{selectedCountry.topLevelDomain}</p>\r\n                <p><PropertyName>Currencies: </PropertyName>{selectedCountry.nativeName}</p>\r\n                <p><PropertyName>Languages: </PropertyName>{selectedCountryLaguages.join(\", \")}</p>\r\n            </CoutryDataContainer>\r\n            <div>\r\n                <BorderCountriesContainer>\r\n                    <PropertyName list>\r\n                        Border Countires:\r\n                    </PropertyName>\r\n                    {selectedCountryBordersNames.map(countryName => (\r\n                        <StyledLink to={toCountry(countryName)}>{countryName}</StyledLink>\r\n                    ))}\r\n\r\n                </BorderCountriesContainer>\r\n            </div>\r\n        </div>\r\n    </Wrapper>\r\n)","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Button } from \"./Button\";\r\nimport { Country } from \"./Country\";\r\nimport { Main } from \"../../../common/Main\";\r\n\r\n\r\nexport const CountryPage = ({ countriesData }) => {\r\n    const { name } = useParams();\r\n    let selectedCountry;\r\n    let selectedCountryLaguages;\r\n    let selectedCountryBordersNames;\r\n\r\n    if (countriesData.state === \"success\") {\r\n        selectedCountry = countriesData.countries.find(country => country.name === name);\r\n        selectedCountryLaguages = selectedCountry.languages.map(language => language.name);\r\n        selectedCountryBordersNames = selectedCountry.borders\r\n            .map(countryShotName => countriesData.countries\r\n                .find(country => country.alpha3Code === countryShotName).name)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {countriesData.state === \"success\" && (\r\n                <Main>\r\n                    <Button />\r\n                    <Country\r\n                        selectedCountry={selectedCountry}\r\n                        selectedCountryLaguages={selectedCountryLaguages}\r\n                        selectedCountryBordersNames={selectedCountryBordersNames}\r\n                    />\r\n                </Main>\r\n            )}\r\n        </>\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 15px 30px;\r\n    max-width: ${({ theme }) => theme.breakpoints.desktopL}px;\r\n    margin: 0px auto;\r\n`;\r\n\r\nexport const HeaderTitle = styled.h1`\r\n    font-size: ${({ theme }) => theme.fontSize.title}px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, auto);\r\n    gap: 7px;\r\n    align-items: center;\r\n    margin-left: 10px;\r\n    padding: 7px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    border: none;\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    background-color: ${({ theme }) => theme.colors.elements};\r\n    box-shadow: 1px 1px 5px 0px ${({ theme }) => theme.colors.input};\r\n    margin-bottom: 30px;\r\n`;","import React from \"react\";\r\nimport { StyledHeader, HeaderTitle, StyledButton, Wrapper } from \"./styled\";\r\n\r\nexport const Header = ({ title, themeName, toggleThemeName }) => {\r\n    console.log(themeName);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <StyledHeader>\r\n                <HeaderTitle>{title}</HeaderTitle>\r\n                <StyledButton onClick={() => toggleThemeName()}>\r\n                    {themeName === \"Dark\"\r\n                        ? <ion-icon size=\"small\" name=\"sunny-outline\"></ion-icon>\r\n                        : <ion-icon size=\"small\" name=\"moon-outline\"></ion-icon>}\r\n                    {\" \"}\r\n                    <span>{themeName}&nbsp;Theme</span>\r\n                </StyledButton>\r\n            </StyledHeader>\r\n        </Wrapper>\r\n    )\r\n};","export const lightTheme = {\r\n    colors: {\r\n        background: \"hsl(0, 0%, 98%)\",\r\n        input: \"hsl(0, 0%, 80%)\",\r\n        text: \"hsl(200, 15%, 8%)\",\r\n        elements: \"hsl(0, 0%, 100%)\",\r\n    },\r\n    breakpoints: {\r\n        mobile: 475,\r\n        tablet: 767,\r\n        desktop: 1023,\r\n        desktopL: 1440,\r\n    },\r\n    fontSize: {\r\n        title: 24,\r\n        desktopCountryName: 16,\r\n        detailPageCountryName: 18,\r\n        homepageItems: 14,\r\n        detailPage: 16,\r\n    },\r\n    fontFamily: {\r\n        primary: \"'Nunito Sans', sans-serif\",\r\n    },\r\n    fontWeights: {\r\n        light: 300,\r\n        semiBold: 600,\r\n        extraBold: 800,\r\n    }\r\n}\r\n\r\nexport const darkTheme = {\r\n    ...lightTheme,\r\n    colors: {\r\n        background: \"hsl(207, 26%, 17%)\",\r\n        input: \"hsl(207, 26%, 17%)\",\r\n        text: \"hsl(0, 0%, 100%)\",\r\n        elements: \"hsl(209, 23%, 22%)\",\r\n    }\r\n}","import React from \"react\";\r\nimport { Switch, Route, Redirect, HashRouter } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport { CountriesPage } from \"./features/countries/CountriesPage\";\r\nimport { CountryPage } from \"./features//countries/CountryPage\";\r\nimport { useCountriesData } from \"./features/useCountriesData\";\r\nimport { Header } from \"./common/Header\";\r\nimport { useTheme } from \"./useTheme\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { toCountries, toCountry } from \"./routes\";\r\n\r\nconst App = () => {\r\n    const countriesData = useCountriesData();\r\n    const { themeName, toggleThemeName } = useTheme();\r\n\r\n    return (\r\n        <ThemeProvider theme={themeName === \"Light\" ? darkTheme : lightTheme}>\r\n            <GlobalStyle />\r\n            <HashRouter>\r\n                <Header title=\"Where is the world?\" themeName={themeName} toggleThemeName={toggleThemeName} />\r\n                <Switch>\r\n                    <Route path={toCountry()}>\r\n                        <CountryPage countriesData={countriesData} />\r\n                    </Route>\r\n                    <Route path={toCountries()}>\r\n                        <CountriesPage countriesData={countriesData} />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Redirect to={toCountries()} />\r\n                    </Route>\r\n                </Switch>\r\n            </HashRouter>\r\n        </ThemeProvider>\r\n    )\r\n};\r\n\r\nexport default App;","import { useState, useEffect, useRef } from \"react\";\r\nimport countriesInfo from \"../services/countries.json\";\r\n\r\nexport const useCountriesData = () => {\r\n    const [countriesData, setCountriesData] = useState(({\r\n        state: \"loading\"\r\n    }));\r\n    const mounted = useRef(true);\r\n\r\n    useEffect(() => {\r\n        mounted.current = true;\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await countriesInfo;\r\n                setCountriesData({\r\n                    state: \"success\",\r\n                    countries: response\r\n                })\r\n            } catch {\r\n                setCountriesData({\r\n                    state: \"error\",\r\n                })\r\n            }\r\n        }\r\n\r\n        setTimeout(fetchData, 1000)\r\n\r\n        return () => mounted.current = false;\r\n    }, [])\r\n\r\n    return countriesData;\r\n};","import { useState } from \"react\";\r\n\r\nexport const useTheme = () => {\r\n    const [themeName, setThemeName] = useState(\"Dark\");\r\n\r\n    const toggleThemeName = () => {\r\n        return themeName === \"Light\" ? setThemeName(\"Dark\") : setThemeName(\"Light\");\r\n    };\r\n\r\n    return { themeName, toggleThemeName };\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}